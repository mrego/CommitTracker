import{r as f}from"./CTRyl4Lp.js";import{f as v,m as w,h as _,g,y as m,G as h,p as y,r as C,o as L,i as x,s as z}from"./B29pliZ2.js";const k=v({__name:"DevelopersInput",props:w({size:{type:String,required:!1}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(r){const i=_(null),a=g(r,"modelValue"),u=m([]),c=m([]);(async()=>{const e=s=>fetch(`/data/${s.dirname}/usernames.json`).then(n=>n.json()),l=(await Promise.all(f.map(e))).reduce((s,n)=>s.concat(n),[]),o=[...new Set(l)];u.value=o,a.value=a.value.filter(s=>o.includes(s))})();const p=e=>{e=e.trim().toLowerCase();const t=o=>o.toLowerCase().indexOf(e)==0,l=(o,s)=>o.toLowerCase().indexOf(e)-s.toLowerCase().indexOf(e);c.value=u.value.filter(t).sort(l)},{$color:d}=h();return y(a,()=>{setTimeout(()=>{let e=0;for(const t of i.value.$el.querySelectorAll(".tag"))t.style.backgroundColor=d(a.value[e]),++e},0)}),(e,t)=>{const l=C("b-taginput");return L(),x(l,{ref_key:"input",ref:i,modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=o=>a.value=o),onTyping:p,data:z(c),"allow-new":!1,autocomplete:"",icon:"label",field:"this",placeholder:"developer username",type:"is-primary",size:r.size||"is-medium","open-on-focus":""},null,8,["modelValue","data","size"])}}});export{k as _};
